{"version":3,"sources":["apis/streams.js","history.js","actions/index.js","actions/types.js","containers/GoogleAuth.js","containers/Header.js","containers/stream/StreamForm.js","containers/stream/StreamCreate.js","containers/Modal.js","containers/stream/StreamDelete.js","containers/stream/StreamEdit.js","containers/stream/StreamList.js","containers/stream/StreamShow.js","containers/App.js","reducers/authReducer.js","reducers/index.js","reducers/streamReducer.js","index.js"],"names":["axios","create","baseURL","createBrowserHistory","fetchStream","id","dispatch","a","streams","get","response","type","payload","data","GoogleAuth","onAuthChange","isSignedIn","props","signIn","auth","currentUser","getBasicProfile","getEmail","signOut","window","confirm","console","log","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","this","className","onClick","renderAuthButton","React","Component","connect","state","userEmail","to","style","fontFamily","color","StreamForm","renderError","visited","active","error","submitFailed","errorMessage","renderInput","input","label","meta","autoComplete","onSubmit","formData","handleSubmit","Field","name","component","reduxForm","form","validate","errors","title","description","StreamCreate","createStream","getState","post","history","push","Modal","ReactDOM","createPortal","onDismiss","e","stopPropagation","content","action","document","querySelector","StreamDelete","Fragment","deleteStream","match","params","undefined","stream","delete","StreamEdit","formValues","editStream","enableReinitialize","initialValues","patch","StreamList","renderAdminButtons","streamUserEmail","streamId","renderList","map","key","renderCreateButton","textAlign","fetchStreams","Object","values","StreamShow","shown","playing","componentWillUnmount","player","destroy","buildPlayer","flv","createPlayer","url","attachMediaElement","videoRef","current","setState","_receivedCanPlay","renderStreamStatus","paddingLeft","renderSteps","padding","renderContent","ref","width","controls","paddingBottom","createRef","App","path","exact","INITIAL_STATE","combineReducers","formReducer","_","mapKeys","omit","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","Reducers","applyMiddleware","thunk","render"],"mappings":"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","file":"static/js/main.4c0d8cf4.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create(\r\n    {\r\n        baseURL: 'https://dream-stream-sameep.herokuapp.com/'\r\n    }\r\n)","import { createBrowserHistory } from 'history';\r\nexport default createBrowserHistory();","import streams from '../apis/streams'\r\nimport {\r\n    SIGN_IN,\r\n    SIGN_OUT,\r\n    CREATE_STREAM,\r\n    DELETE_STREAM,\r\n    FETCH_STREAM,\r\n    FETCH_STREAMS,\r\n    EDIT_STREAM\r\n} from './types';\r\nimport history from '../history';\r\n\r\nexport const signIn = (userEmail) => {\r\n    return {\r\n        type: SIGN_IN,\r\n        payload: userEmail\r\n    }\r\n}\r\nexport const signOut = () => {\r\n    return {\r\n        type: SIGN_OUT\r\n    }\r\n}\r\n\r\nexport const createStream = formData => async (dispatch, getState) => {\r\n    const { userEmail } = getState().auth;\r\n    const response = await streams.post('/streams', { ...formData, userEmail })\r\n\r\n    dispatch({ type: CREATE_STREAM, payload: response.data })\r\n    history.push('/DreamStream');\r\n}\r\n\r\nexport const fetchStreams = () => async (dispatch) => {\r\n    const response = await streams.get('/streams')\r\n\r\n    dispatch({ type: FETCH_STREAMS, payload: response.data })\r\n}\r\nexport const fetchStream = (id) => async dispatch => {\r\n    const response = await streams.get(`/streams/${id}`)\r\n\r\n    dispatch({ type: FETCH_STREAM, payload: response.data })\r\n}\r\n\r\nexport const deleteStream = id => async dispatch => {\r\n    await streams.delete(`streams/${id}`);\r\n\r\n    dispatch({ type: DELETE_STREAM, payload: id })\r\n    history.push('/DreamStream')\r\n}\r\n\r\nexport const editStream = (id, formData) => async dispatch => {\r\n    const response = await streams.patch(`streams/${id}`, formData)\r\n\r\n    dispatch({ type: EDIT_STREAM, payload: response });\r\n    history.push('/DreamStream')\r\n}","export const SIGN_IN = 'SIGN_IN';\r\nexport const SIGN_OUT = 'SIGN_OUT';\r\nexport const CREATE_STREAM = 'CREATE_STREAM'\r\nexport const DELETE_STREAM = 'DELETE_STREAM'\r\nexport const FETCH_STREAM = 'FETCH_STREAM'\r\nexport const FETCH_STREAMS = 'FETCH_STREAMS'\r\nexport const EDIT_STREAM = 'EDIT_STREAM'","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { signIn, signOut } from '../actions'\r\n\r\nclass GoogleAuth extends React.Component {\r\n    componentDidMount() {\r\n        console.log(window);\r\n        window.gapi.load('client:auth2', () => {\r\n            window.gapi.client.init({\r\n                clientId: '676593651017-ittursaqeipecr7b519slq958o4kofn6.apps.googleusercontent.com',\r\n                scope: 'email'\r\n            }).then(() => {\r\n                this.auth = window.gapi.auth2.getAuthInstance();\r\n                this.onAuthChange(this.auth.isSignedIn.get());\r\n                this.auth.isSignedIn.listen(this.onAuthChange) //this function takes in a callback function that is called whenever signedIn state changes \r\n            })\r\n        });\r\n    }\r\n\r\n    onAuthChange = (isSignedIn) => {\r\n        if (isSignedIn) {\r\n            this.props.signIn(this.auth.currentUser.get().getBasicProfile().getEmail()\r\n            );\r\n        } else {\r\n            this.props.signOut();\r\n        }\r\n    }\r\n\r\n    signIn = () => {\r\n        this.auth.signIn();\r\n    }\r\n\r\n    signOut = () => {\r\n        let confirmSignOut = window.confirm('Are you sure you want to sign out?')\r\n        if (confirmSignOut) {\r\n            this.auth.signOut();\r\n        }\r\n    }\r\n\r\n    renderAuthButton() {\r\n        console.log(this.props.isSignedIn,this.auth)\r\n        if (this.props.isSignedIn === null) {\r\n            return null;\r\n        } else if (this.props.isSignedIn) {\r\n            return (\r\n                <button\r\n                    className='ui red google button'\r\n                    onClick={this.signOut}\r\n                >\r\n                    <i className='google icon' />\r\n                    Sign Out\r\n                </button>\r\n            )\r\n        } else {\r\n            return (\r\n                <button\r\n                    className='ui red google button'\r\n                    onClick={this.signIn}\r\n                >\r\n                    <i className='google icon' />\r\n                    Sign In With Google\r\n                </button>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.renderAuthButton()\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isSignedIn: state.auth.isSignedIn\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { signIn, signOut })(GoogleAuth);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport GoogleAuth from './GoogleAuth';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <div className='ui secondary pointing menu'>\r\n            <Link to='/DreamStream' className='item'>\r\n                <p style={{fontFamily:'verdana',color:'#B71C1C'}}><strong>DreamStream</strong></p>\r\n            </Link>\r\n            <div className='right menu'>\r\n                <p className=\"item\">{props.userEmail}</p>    \r\n                <GoogleAuth />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userEmail: state.auth.userEmail,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Header);","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nclass StreamForm extends React.Component {\r\n    renderError = ({ visited, active, error, submitFailed }) => {\r\n        if (((visited && !active) || submitFailed) && error) {\r\n            const errorMessage = error;\r\n            return <li>{errorMessage}</li>;\r\n        }\r\n    }\r\n\r\n    renderInput = ({ input, label, meta }) => {\r\n        const className = `field \r\n        ${(meta.visited && meta.error && !meta.active) || meta.submitFailed\r\n                ? 'error' : ''}`\r\n        return (\r\n            <div className={className}>\r\n                <label>{label}</label>\r\n                <input {...input} autoComplete='off' />\r\n                {this.renderError(meta)}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onSubmit = (formData) => {\r\n        this.props.onSubmit(formData)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form\r\n                onSubmit={this.props.handleSubmit(this.onSubmit)}\r\n                className='ui form error'\r\n            >\r\n                <Field name='title' component={this.renderInput} label='Enter Title' />\r\n                <Field name='description' component={this.renderInput} label='Enter Description' />\r\n                <button type='submit' className='ui button primary'>Submit</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nconst validate = formData => {\r\n    const errors = {}\r\n\r\n    if (!formData.title) {\r\n        errors.title = 'You must enter a title'\r\n    }\r\n    if (!formData.description) {\r\n        errors.description = 'You must enter a description'\r\n    }\r\n    return errors\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'StreamForm',\r\n    validate\r\n})(StreamForm);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport StreamForm from './StreamForm';\r\nimport { createStream } from '../../actions';\r\n\r\nclass StreamCreate extends React.Component {\r\n    onSubmit = (formData) => {\r\n        this.props.createStream(formData)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>Create A Stream</h3>\r\n                <StreamForm onSubmit={this.onSubmit} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null, { createStream })(StreamCreate)\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst Modal = props => {\r\n    return ReactDOM.createPortal(\r\n        <div\r\n            className='ui dimmer modals visible active'\r\n            onClick={props.onDismiss}\r\n        >\r\n            <div\r\n                className='ui standard modal visible active'\r\n                onClick={e => e.stopPropagation()}\r\n            >\r\n                <div className='header'>{props.title}</div>\r\n                <div className='content'>{props.content}</div>\r\n                <div className='actions'>\r\n                    {props.action()}\r\n                </div>\r\n            </div>\r\n        </div>,\r\n        document.querySelector('#modal')\r\n    )\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Modal from '../Modal';\r\nimport history from '../../history';\r\nimport { fetchStream } from '../../actions';\r\nimport { deleteStream } from '../../actions';\r\n\r\nclass StreamDelete extends React.Component {\r\n    componentDidMount() {\r\n        this.props.fetchStream(this.props.match.params.id)\r\n    }\r\n\r\n    action = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <button\r\n                    onClick={() => this.props.deleteStream(this.props.match.params.id)}\r\n                    className='ui button negative'>Delete</button>\r\n                <Link\r\n                    to='/DreamStream'\r\n                    className='ui button primary'\r\n                >\r\n                    Cancel\r\n                </Link>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    onDismiss = () => [\r\n        history.push('/')\r\n    ]\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                title='Delete Stream'\r\n                content={`Are you sure you want to delete stream: \r\n                            ${this.props.stream.title === undefined ?\r\n                        '' : this.props.stream.title + '?'}`}\r\n                action={this.action}\r\n                onDismiss={this.onDismiss}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        stream: state.streams\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchStream, deleteStream })(StreamDelete);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchStream, editStream } from '../../actions';\r\nimport StreamForm from './StreamForm';\r\n\r\nclass StreamEdit extends React.Component {\r\n    componentDidMount() {\r\n        this.props.fetchStream(this.props.match.params.id)\r\n    }\r\n\r\n    onSubmit = (formValues) => {\r\n        this.props.editStream(this.props.match.params.id, formValues)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>Edit A Stream</h3>\r\n                <StreamForm\r\n                    onSubmit={this.onSubmit}\r\n                    enableReinitialize\r\n                    initialValues={{\r\n                        title: this.props.stream.title,\r\n                        description: this.props.stream.description\r\n                    }}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        stream: state.streams\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchStream, editStream })(StreamEdit);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchStreams } from '../../actions';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass StreamList extends React.Component {\r\n    componentDidMount() {\r\n        this.props.fetchStreams()\r\n    }\r\n\r\n    renderAdminButtons = (streamUserEmail, streamId) => {\r\n        if (this.props.userEmail === streamUserEmail) {\r\n            return (\r\n                <div className='right floated content'>\r\n                    <Link\r\n                        className='ui button primary'\r\n                        to={`/DreamStream/stream/edit/${streamId}`}\r\n                    >\r\n                        Edit\r\n                    </Link>\r\n                    <Link\r\n                        className='ui button negative'\r\n                        to={`/DreamStream/stream/delete/${streamId}`}\r\n                    >\r\n                        Delete\r\n                    </Link>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    renderList = () => {\r\n        return this.props.streams.map(stream => {\r\n            if(stream.id){\r\n                return (\r\n                    <div className='item' key={stream.id}>\r\n                        {this.renderAdminButtons(stream.userEmail, stream.id)}\r\n                        <i className='large middle aligned icon camera' />\r\n                        <div className='content'>\r\n                            <Link to={`/DreamStream/stream/${stream.id}`}>{stream.title}</Link>\r\n                            <div className='description'>\r\n                                {stream.description}\r\n                                <div><strong>Owner: {stream.userEmail}</strong> </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        })\r\n    }\r\n\r\n    renderCreateButton = () => {\r\n        if (this.props.isSignedIn) {\r\n            return (\r\n                <div style={{ textAlign: 'center' }}>\r\n                    <Link to='/DreamStream/stream/new' className='ui button secondary center'>\r\n                        Create New Stream\r\n                    </Link>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2 style={{ textAlign: 'center' }}>All Streams</h2>\r\n                <div className='ui celled list'>\r\n                    {this.renderList()}\r\n                    {this.renderCreateButton()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        streams: Object.values(state.streams), //converts objects to arrays\r\n        userEmail: state.auth.userEmail,\r\n        isSignedIn: state.auth.isSignedIn\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchStreams })(StreamList);","import React from 'react';\r\nimport flv from 'flv.js';\r\nimport { connect } from 'react-redux';\r\nimport { fetchStream } from '../../actions';\r\n\r\nclass StreamShow extends React.Component {\r\n    state={shown:false,playing:false}\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.videoRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { id } = this.props.match.params\r\n        this.props.fetchStream(id)\r\n        this.buildPlayer();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.buildPlayer();\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        this.player.destroy();\r\n    }\r\n\r\n    buildPlayer = () => {\r\n        const { id } = this.props.match.params\r\n\r\n        if (this.player || !this.props.stream.title) {\r\n            return;\r\n        }\r\n\r\n        this.player = flv.createPlayer({\r\n            type: 'flv',\r\n            url: `http://localhost:8000/live/${id}.flv`\r\n        })\r\n        this.player.attachMediaElement(this.videoRef.current)\r\n        console.log(this.player)\r\n        this.setState({playing:this.player._receivedCanPlay})\r\n    \r\n        this.player.load();\r\n    }\r\n\r\n    renderStreamStatus = (userEmail) => {\r\n        if(this.player){\r\n            console.log(this.player._receivedCanPlay,this.state.playing)\r\n            return !this.player._receivedCanPlay? <h4 style={{color:'red',paddingLeft:30}}>{userEmail} is not streaming currently.</h4>\r\n                            :<h4 style={{color:'green',paddingLeft:30}}>{userEmail} is streaming now.</h4>;\r\n        }\r\n    }\r\n\r\n    renderSteps = (userEmail) => {\r\n        if(this.props.auth.userEmail === userEmail){\r\n            return <div style={{textAlign:'center', padding:5}}>Open OBS studio, enter the streaming ID present in URL and start streaming!</div>\r\n        }\r\n    }\r\n\r\n    renderContent = () => {\r\n        if (!this.props.stream.title) {\r\n            return <h1>Loading...</h1>\r\n        }\r\n        const { title, description, id, userEmail } = this.props.stream\r\n        return (\r\n            <div>\r\n                {this.renderSteps(userEmail)}\r\n                <video ref={this.videoRef} style={{ width: '100%' }} controls />\r\n                <h1 style={{paddingLeft:20}}>{id}. {title}</h1>\r\n                {this.renderStreamStatus(userEmail)}\r\n                <h4 style={{paddingLeft:30,paddingBottom:20}}>Description: {description}</h4>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.renderContent()\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        stream: state.streams,\r\n        auth:state.auth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchStream })(StreamShow);","import React from 'react';\r\nimport { Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport Header from './Header';\r\nimport StreamCreate from './stream/StreamCreate';\r\nimport StreamDelete from './stream/StreamDelete';\r\nimport StreamEdit from './stream/StreamEdit';\r\nimport StreamList from './stream/StreamList';\r\nimport StreamShow from './stream/StreamShow';\r\nimport history from '../history';\r\n\r\nconst App = () => {\r\n    return (\r\n        <div>\r\n            <Router history={history}>\r\n                <Header />\r\n                <Switch>\r\n                    <Route path='/DreamStream' exact component={StreamList} />\r\n                    <Route path='/DreamStream/stream/new' exact component={StreamCreate} />\r\n                    <Route path='/DreamStream/stream/edit/:id' exact component={StreamEdit} />\r\n                    <Route path='/DreamStream/stream/delete/:id' exact component={StreamDelete} />\r\n                    <Route path='/DreamStream/stream/:id' exact component={StreamShow} />\r\n                </Switch>\r\n            </Router>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;","import { SIGN_IN, SIGN_OUT } from '../actions/types'\r\n\r\nconst INITIAL_STATE = {\r\n    isSignedIn: null,\r\n    userEmail: null\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case SIGN_IN:\r\n            return { ...state, isSignedIn: true, userEmail: action.payload };\r\n        case SIGN_OUT:\r\n            return { ...state, isSignedIn: false, userEmail: null };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport authReducer from './authReducer';\r\nimport streamReducer from './streamReducer';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nexport default combineReducers({\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    streams: streamReducer\r\n})","import {\r\n    CREATE_STREAM,\r\n    FETCH_STREAM,\r\n    FETCH_STREAMS,\r\n    EDIT_STREAM,\r\n    DELETE_STREAM\r\n} from '../actions/types';\r\nimport _ from 'lodash';\r\n\r\nexport default (state = {}, action) => {\r\n    switch (action.type) {\r\n        case FETCH_STREAM:\r\n            return action.payload;\r\n        case FETCH_STREAMS:\r\n            return { ...state, ..._.mapKeys(action.payload, 'id') }\r\n        case CREATE_STREAM:\r\n            return { ...state, [action.payload.id]: action.payload };\r\n        case EDIT_STREAM:\r\n            return { ...state, [action.payload.id]: action.payload };\r\n        case DELETE_STREAM:\r\n            return _.omit(state, action.payload)\r\n        default:\r\n            return state\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\n\r\nimport App from './containers/App';\r\nimport Reducers from './reducers';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n    Reducers,\r\n    composeEnhancers(applyMiddleware(thunk))\r\n)\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.querySelector('#root')\r\n)"],"sourceRoot":""}